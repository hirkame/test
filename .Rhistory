ggplot2::labs(x = "Year", y = "Growth Rate Relative to 2011", colour = "Model") +
ggplot2::theme(legend.position="bottom", strip.text.x = ggplot2::element_blank()) +
ggplot2::scale_colour_discrete(labels = c("(1) Year", "(2) Year & Ind. FEs", "(3) Year & Ind. FEs (Age Controlled)")) +
ggplot2::scale_x_continuous(breaks = c(2011, 2014, 2017, 2020))
# Linear
df <- data %>%
dplyr::mutate(
age_30 = age - 30,
age_40 = age - 40,
age_50 = age - 50,
age_60 = age - 60
)
mod3_30 <- fixest::feols(log(salary) ~ year + I(age_30^2) + I(age_30^3)| atena, df)
mod3_40 <- fixest::feols(log(salary) ~ year + I(age_40^2) + I(age_40^3)| atena, df)
mod3_50 <- fixest::feols(log(salary) ~ year + I(age_50^2) + I(age_50^3)| atena, df)
mod3_60 <- fixest::feols(log(salary) ~ year + I(age_60^2) + I(age_60^3)| atena, df)
df <- data.frame(
year = rep(levels(data$year) %>% as.numeric, 4),
model = c(rep("40 y/o", 10), rep("50 y/o", 10), rep("30 y/o", 10), rep("60 y/o", 10)),
value = c(0, as.numeric(mod3_40$coefficients[1:9]),
0, as.numeric(mod3_50$coefficients[1:9]),
0, as.numeric(mod3_30$coefficients[1:9]),
0, as.numeric(mod3_60$coefficients[1:9])) %>% exp,
low = c(0, as.numeric(confint(mod3_40)[1:9, 1]),
0, as.numeric(confint(mod3_50)[1:9, 1]),
0, as.numeric(confint(mod3_30)[1:9, 1]),
0, as.numeric(confint(mod3_60)[1:9, 1])) %>% exp,
high = c(0, as.numeric(confint(mod3_40)[1:9, 2]),
0, as.numeric(confint(mod3_50)[1:9, 2]),
0, as.numeric(confint(mod3_30)[1:9, 2]),
0, as.numeric(confint(mod3_60)[1:9, 2])) %>% exp,
cat = rep("Linear", 40)
)
# Non-Linear
generate_df <- function (data, threshold) {
df <- data %>%
dplyr::mutate(
age_gaussian = dnorm(x = (age %% threshold) / threshold, mean=0, sd=1),
age_flag = (age - 25) %/% threshold %>%
as.factor
) %>%
tidyr::pivot_wider(
names_from = age_flag,
names_prefix = "age_gaussian_",
values_from = age_gaussian
) %>%
dplyr::mutate(
dplyr::across(
.cols = tidyselect::starts_with("age_gaussian_"),
.fns = ~ tidyr::replace_na(.x, 0)
)
)
}
df5 <- generate_df(data, 5)
df7 <- generate_df(data, 7)
mod3_gaussian_5 <- fixest::feols(log(salary) ~ year + age_gaussian_0 + age_gaussian_1 + age_gaussian_2 + age_gaussian_3 + age_gaussian_4 + age_gaussian_5 + age_gaussian_6 | atena, df5)
mod3_gaussian_7 <- fixest::feols(log(salary) ~ year + age_gaussian_0 + age_gaussian_1 + age_gaussian_2 + age_gaussian_3 + age_gaussian_4 | atena, df7)
df <- df %>%
rbind(
data.frame(
year = rep(levels(data$year) %>% as.numeric, 2),
model = c(rep("5 years", 10), rep("7 years", 10)),
value = c(0, as.numeric(mod3_gaussian_5$coefficients[1:9]),
0, as.numeric(mod3_gaussian_7$coefficients[1:9])) %>% exp,
low = c(0, as.numeric(confint(mod3_gaussian_5)[1:9, 1]),
0, as.numeric(confint(mod3_gaussian_7)[1:9, 1])) %>% exp,
high = c(0, as.numeric(confint(mod3_gaussian_5)[1:9, 2]),
0, as.numeric(confint(mod3_gaussian_7)[1:9, 2])) %>% exp,
cat = rep("Non-Linear", 20)
)
) %>%
dplyr::mutate(
cat = paste0(cat, ": ", model)
)
df$model <- factor(df$model, levels=c('30 y/o', '40 y/o', '50 y/o', '60 y/o', '5 years', '7 years'))
ggplot2::ggplot(df, mapping = ggplot2::aes(x = year, y = value * 100 - 100, group = model, colour = model)) +
ggplot2::geom_line() +
ggplot2::geom_point() +
ggplot2::geom_linerange(
mapping = ggplot2::aes(ymin = low * 100 - 100, ymax = high * 100 - 100, x = year)
) +
ggplot2::facet_wrap(
facets = ggplot2::vars(cat),
ncol = 3
) +
ggplot2::labs(x = "Year", y = "Growth Rate Relative to 2011", colour = "Model") +
ggplot2::scale_x_continuous(breaks = c(2011, 2014, 2017, 2020)) +
ggplot2::theme(legend.position="bottom")
linear <- data.frame(
square = c(mod3_30$coefficients[["I(age_30^2)"]], mod3_40$coefficients[["I(age_40^2)"]], mod3_50$coefficients[["I(age_50^2)"]], mod3_60$coefficients[["I(age_60^2)"]]),
cube = c(mod3_30$coefficients[["I(age_30^3)"]], mod3_40$coefficients[["I(age_40^3)"]], mod3_50$coefficients[["I(age_50^3)"]], mod3_60$coefficients[["I(age_60^3)"]]),
class = 1,
row.names = c(30, 40, 50, 60))
gaussian_5 <- data.frame(
age = 25:59,
coef = rep(as.numeric(coef(mod3_gaussian_5)[10:16]), each = 5),
class = 2
) %>%
dplyr::mutate(
age_gaussian = dnorm(x = (age %% 5) / 5, mean=0, sd=1),
val = coef * age_gaussian
)
gaussian_7 <- data.frame(
age = 25:59,
coef = rep(as.numeric(coef(mod3_gaussian_7)[10:14]), each = 7),
class = 2
) %>%
dplyr::mutate(
age_gaussian = dnorm(x = (age %% 7) / 7, mean=0, sd=1),
val = coef * age_gaussian
)
ggplot2::ggplot(linear) +
ggplot2::geom_function(fun = function(x) linear$square[1] * (x - 30)^2 + linear$cube[1] * (x - 30)^3, mapping = ggplot2::aes(colour = "30")) +
ggplot2::geom_function(fun = function(x) linear$square[2] * (x - 40)^2 + linear$cube[2] * (x - 40)^3, mapping = ggplot2::aes(colour = "40")) +
ggplot2::geom_function(fun = function(x) linear$square[3] * (x - 50)^2 + linear$cube[3] * (x - 50)^3, mapping = ggplot2::aes(colour = "50")) +
ggplot2::geom_function(fun = function(x) linear$square[4] * (x - 60)^2 + linear$cube[4] * (x - 60)^3, mapping = ggplot2::aes(colour = "60")) +
ggplot2::geom_point(ggplot2::aes(x = 30, y = 0, colour = "30"), size = 3) +
ggplot2::geom_point(ggplot2::aes(x = 40, y = 0, colour = "40"), size = 3) +
ggplot2::geom_point(ggplot2::aes(x = 50, y = 0, colour = "50"), size = 3) +
ggplot2::geom_point(ggplot2::aes(x = 60, y = 0, colour = "60"), size = 3) +
# Gaussian
ggplot2::geom_line(data = gaussian_5, mapping = ggplot2::aes(x = age, y = val, colour = "5")) +
ggplot2::geom_line(data = gaussian_7, mapping = ggplot2::aes(x = age, y = val, colour = "7")) +
ggplot2::xlim(25, 60) +
ggplot2::labs(x = "Age", y = "Earnings Premium (ln)") +
ggplot2::theme(legend.position="bottom") +
ggplot2::scale_colour_manual("Category", values = c("30" = "1", "40" = "2", "50" = "3", "60" = "4", "5" = "5", "7" = "6"), labels = c("Threshold: 30", "Threshold: 40", "Threshold: 50", "Threshold: 60", "Bandwidths: 5", "Bandwidths: 7")) +
ggplot2::facet_wrap(facet = ggplot2::vars(class), labeller = ggplot2::as_labeller(c(`1` = "Linear", `2` = "Non-Linear")))
mod3_gaussian_5 <- fixest::feols(log(salary) ~ year + age_gaussian_0^2 age_gaussian_1^2 + age_gaussian_2^2 + age_gaussian_3^2 + age_gaussian_4^2 + age_gaussian_5^2 + age_gaussian_6^2 | atena, df5)
# Non-Linear
generate_df <- function (data, threshold) {
df <- data %>%
dplyr::mutate(
age_gaussian = dnorm(x = (age %% threshold) / threshold, mean=0, sd=1),
age_flag = (age - 25) %/% threshold %>%
as.factor
) %>%
tidyr::pivot_wider(
names_from = age_flag,
names_prefix = "age_gaussian_",
values_from = age_gaussian
) %>%
dplyr::mutate(
dplyr::across(
.cols = tidyselect::starts_with("age_gaussian_"),
.fns = ~ tidyr::replace_na(.x, 0)
)
)
}
df5 <- generate_df(data, 5)
mod3_gaussian_5 <- fixest::feols(log(salary) ~ year + age_gaussian_0^2 age_gaussian_1^2 + age_gaussian_2^2 + age_gaussian_3^2 + age_gaussian_4^2 + age_gaussian_5^2 + age_gaussian_6^2 | atena, df5)
mod3_gaussian_5 <- fixest::feols(log(salary) ~ year + age_gaussian_0**2 age_gaussian_1**2 + age_gaussian_2**2 + age_gaussian_3**2 + age_gaussian_4**2 + age_gaussian_5**2 + age_gaussian_6**2 | atena, df5)
mod3_gaussian_5 <- fixest::feols(log(salary) ~ year + age_gaussian_0^2 + age_gaussian_1^2 + age_gaussian_2^2 + age_gaussian_3^2 + age_gaussian_4^2 + age_gaussian_5^2 + age_gaussian_6^2 | atena, df5)
mod3_gaussian_5
summary(mod3_gaussian_5)
mod3_gaussian_5 <- fixest::feols(log(salary) ~ year + age_gaussian_0 + age_gaussian_0^2 + age_gaussian_1 + age_gaussian_1^2 + age_gaussian_2 + age_gaussian_2^2 + age_gaussian_3 + age_gaussian_3^2 + age_gaussian_4 + age_gaussian_4^2 + age_gaussian_5 + age_gaussian_5^2 + age_gaussian_6 + age_gaussian_6^2 | atena, df5)
summary(mod3_gaussian_5)
gaussian_5 <- data.frame(
age = 25:59,
coef = rep(as.numeric(coef(mod3_gaussian_5)[10:16]), each = 5),
class = 2
) %>%
dplyr::mutate(
age_gaussian = dnorm(x = (age %% 5) / 5, mean=0, sd=1),
val = coef * age_gaussian
)
gaussian_5
# Settings
here::i_am("analyze.Rmd")
options(box.path = here::here())
options(tinytex.verbose = TRUE)
box::use(magrittr[`%>%`])
ggplot2::theme_set(ggplot2::theme_gray(base_size = 20))
text <- pdftools::pdf_text("data/mw.pdf")
pages <- data.frame(matrix(nrow = 47, ncol = 0))
for (i in 1:length(text)) {
page <- data.frame(stringr::str_split(text[i], "\n") %>% unlist()) %>%
dplyr::slice(4:50)
page <- apply(page, 1,
function(pagerow) {
pagerow  <- pagerow %>%
stringr::str_replace_all("     ", ", ") %>%
stringr::str_replace_all(" ", "")
if (stringr::str_sub(pagerow, 2, 2) == ",") {
pagerow <- stringr::str_replace(pagerow, ",", "")
}
# Split and return a character vector
pagerow <- pagerow %>%
stringr::str_split_1(",")
# Delete empty elements
pagerow <- pagerow[nzchar(pagerow)]
return(pagerow)
}) %>%
as.data.frame
colnames(page) <- page[1,]
page <- page[-1,]
pages <- rbind(pages, page)
}
mw <- pages %>%
dplyr::mutate(
dplyr::across(
.cols = tidyselect::everything(),
.fns = ~ stringr::str_replace_all(.x,
c(
"平成14年" = "2002年",
"平成15年" = "2003年",
"平成16年" = "2004年",
"平成17年" = "2005年",
"平成18年" = "2006年",
"平成19年" = "2007年",
"平成20年" = "2008年",
"平成21年" = "2009年",
"平成22年" = "2010年",
"平成23年" = "2011年",
"平成24年" = "2012年",
"平成25年" = "2013年",
"平成26年" = "2014年",
"平成27年" = "2015年",
"平成28年" = "2016年",
"平成29年" = "2017年",
"平成30年" = "2018年",
"令和元年" = "2019年",
"令和2年" = "2020年",
"令和3年" = "2021年"
)
)
)
) %>%
dplyr::mutate(
dplyr::across(
.cols = tidyselect::everything(),
.fns = ~ gsub("[\u4E00-\u9FFF]", "-", .x, perl = TRUE) %>%
stringr::str_replace("-$", "")
)
)
calculate_mw <- function (pref, data) {
data <- data %>%
dplyr::select(!!rlang::sym(pref))
data <- data.frame(
mw = data[[1]][seq(1, nrow(data), 2)],
date = data[[1]][seq(2, nrow(data), 2)]
) %>%
dplyr::mutate(
mw = as.numeric(mw),
date = as.Date(date)
)
periods <- data.frame()
for (i in 2003:2020) {
period <- data.frame(start = as.Date(paste0(i, "-01-01")), end = as.Date(paste0(i, "-12-31")))
periods <- rbind(periods, period)
}
mws_pref <- data.frame()
for (i in 1:nrow(periods)){
mw_pref <- data %>%
dplyr::filter(date <= periods[i,]$end) %>%
dplyr::mutate(
start_date = pmax(date, periods[i, ]$start),
end_date = pmin(dplyr::lead(date, default = Sys.Date()), periods[i,]$end)
) %>%
dplyr::filter(end_date >= start_date) %>%
dplyr::mutate(
days = as.numeric(difftime(end_date, start_date, units = "days"))
)
mw_pref <- (mw_pref[1, "mw"] * mw_pref[1, "days"] + mw_pref[2, "mw"] * (mw_pref[2, "days"] + 1)) / (mw_pref[1, "days"] + mw_pref[2, "days"])
mws_pref <- rbind(mws_pref, data.frame(year = substr(as.character(periods[i,1]), 1, 4), mw = mw_pref))
}
return(mws_pref)
}
threshold_fk <- calculate_mw("福岡", mw) %>%
dplyr::mutate(
# 20 hours / week for one quarter
threshold = 20 * 365 / (7 * 4) * mw
)
threshold_fk
threshold_oi <- calculate_mw("大分", mw) %>%
dplyr::mutate(
# 20 hours / week for one quarter
threshold = 20 * 365 / (7 * 4) * mw
)
threshold_oi
# Import data
load("data/tkm/cleaned_data.rda", verbose = T)
assign("tkm", data)
# Clean data
tkm$year <- tkm$year - 1 # 課税年度と給与年度
tkm$year <- as.factor(tkm$year)
tkm$atena <- as.character(tkm$atena)
tkm <- tkm %>%
# from 25 to 60
dplyr::filter(
age >= 25 & age < 60
) %>%
# Create lfp (dummy), age_gaussian, and age_flag
dplyr::mutate(
lfp = dplyr::if_else(salary != 0, 1, 0),
age_gaussian = dnorm(x = (age %% 5) / 5, mean=0, sd=1),
age_flag = (age - 25) %/% 5 %>%
as.factor
) %>%
# Make the age_gaussian column wider
tidyr::pivot_wider(
names_from = age_flag,
names_prefix = "age_gaussian_",
values_from = age_gaussian
) %>%
dplyr::mutate(
dplyr::across(
.cols = tidyselect::starts_with("age_gaussian_"),
.fns = ~ tidyr::replace_na(.x, 0)
)
)
# Import data
load("data/ktk/data_notfilteredbyhh.rda", verbose = T)
assign("ktk", data)
rm(data)
# Clean data
ktk$year <- ktk$year - 1 # 課税年度と給与年度
ktk$year <- as.factor(ktk$year)
ktk <- ktk %>%
# from 25 to 60
dplyr::filter(
age >= 25 & age < 60
) %>%
# Create lfp (dummy), age_gaussian, and age_flag
dplyr::mutate(
lfp = dplyr::if_else(salary != 0, 1, 0),
age_gaussian = dnorm(x = (age %% 5) / 5, mean=0, sd=1),
age_flag = (age - 25) %/% 5 %>%
as.factor
) %>%
# Make the age_gaussian column wider
tidyr::pivot_wider(
names_from = age_flag,
names_prefix = "age_gaussian_",
values_from = age_gaussian
) %>%
dplyr::mutate(
dplyr::across(
.cols = tidyselect::starts_with("age_gaussian_"),
.fns = ~ tidyr::replace_na(.x, 0)
)
)
# Exclude top coded data
ktk <- ktk %>%
dplyr::group_by(year) %>%
dplyr::filter(salary < max(salary)) %>%
dplyr::ungroup()
dat <- dplyr::bind_rows(tkm %>%
dplyr::select(year, salary, lfp) %>%
dplyr::mutate(cat = "tkm"),
ktk %>%
dplyr::select(year, salary, lfp) %>%
dplyr::mutate(cat = "ktk"))
ggplot2::ggplot(dat, ggplot2::aes(x = log(salary))) +
ggplot2::facet_wrap(facets = ggplot2::vars(cat)) +
ggplot2::geom_density()
tkm <- tkm %>%
# Filter by 世帯主
dplyr::filter(
relation == "世帯主"
)
# Filter by 世帯主
ktk <- ktk %>%
dplyr::filter(
relation == "世帯主"
)
dat <- dplyr::bind_rows(tkm %>%
dplyr::select(year, salary, lfp, age) %>%
dplyr::mutate(cat = "tkm"),
ktk %>%
dplyr::select(year, salary, lfp, age) %>%
dplyr::mutate(cat = "ktk"))
ggplot2::ggplot(dat, ggplot2::aes(x = log(salary))) +
ggplot2::facet_wrap(facets = ggplot2::vars(cat)) +
ggplot2::geom_density()
# Meaningful Attachment
tkm_ma <- tkm %>%
dplyr::left_join(threshold_oi, by = "year") %>%
dplyr::filter(salary > threshold) %>%
dplyr::mutate(year = as.factor(year))
# Meaningful Attachment
ktk_ma <- ktk %>%
dplyr::left_join(threshold_fk, by = "year") %>%
dplyr::filter(salary > threshold) %>%
dplyr::mutate(year = as.factor(year))
dat_ma <- dplyr::bind_rows(tkm_ma %>%
dplyr::select(year, salary) %>%
dplyr::mutate(cat = "tkm"),
ktk_ma %>%
dplyr::select(year, salary) %>%
dplyr::mutate(cat = "ktk"))
ggplot2::ggplot(dat_ma, ggplot2::aes(x = log(salary))) +
ggplot2::facet_wrap(facets = ggplot2::vars(cat)) +
ggplot2::geom_density()
rm(dat_ma)
df <- dat %>%
dplyr::group_by(cat, year) %>%
dplyr::summarise(
sum = as.numeric(sum(lfp)),
len = as.numeric(length(lfp)),
.groups = "drop"
) %>%
dplyr::mutate(percentage = sum / len * 100)
# Ratio of Salary Earners
ggplot2::ggplot(df, mapping = ggplot2::aes(x = year, fill = cat)) +
ggplot2::geom_bar(ggplot2::aes(y = percentage), stat = "identity", width = .75, position = ggplot2::position_dodge()) +
ggplot2::facet_wrap(facets = ggplot2::vars(cat)) +
ggplot2::ylim(0, 100) +
ggplot2::labs(x = "Year", y = "Ratio of Salary Earners (%)")
df <- dat %>%
dplyr::filter(salary > 0) %>%
dplyr::group_by(age, cat) %>%
dplyr::summarise(mean = mean(salary))
ggplot2::ggplot(df, mapping = ggplot2::aes(x = age, y = mean)) +
ggplot2::geom_line() +
ggplot2::geom_point() +
ggplot2::geom_vline(xintercept = 50, linewidth = 0.75, linetype = "dashed") +
ggplot2::facet_wrap(facets = ggplot2::vars(cat)) +
ggplot2::ylim(0, NA) +
ggplot2::labs(x = "Age", y = "Mean Salary", colour = "Gender") +
ggplot2::scale_colour_discrete(labels = c("Female", "Male")) +
ggplot2::theme(legend.position="bottom")
rm(dat)
mod5_tkm <- sampleSelection::heckit(
selection = lfp ~ year + age + age^2 + female + kids_preschool_d + kids_school_d,
outcome = log(salary) ~ year + age_gaussian_0 + age_gaussian_1 + age_gaussian_2 + age_gaussian_3 + age_gaussian_4 + age_gaussian_5 + age_gaussian_6,
method = "2step",
data = tkm
)
mod5_tkm
summary(mod5_tkm)
mod1_tkm <- fixest::feols(log(salary) ~ year, tkm)
mod2_tkm <- fixest::feols(log(salary) ~ year | atena, tkm)
mod3_tkm <- fixest::feols(log(salary) ~ year + age + age^2, tkm)
mod4_tkm <- fixest::feols(log(salary) ~ year + age_gaussian_0 + age_gaussian_1 + age_gaussian_2 + age_gaussian_3 + age_gaussian_4 + age_gaussian_5 + age_gaussian_6 | atena, tkm)
results_tkm <- data.frame(
year = rep(levels(tkm$year) %>% as.numeric, 4),
model = c(rep("1", 10), rep("2", 10), rep("3", 10), rep("4", 10)),
value = c(0, as.numeric(mod1_tkm$coefficients)[-1],
0, as.numeric(mod2_tkm$coefficients),
0, as.numeric(mod3_tkm$coefficients[2:10]),
0, as.numeric(mod4_tkm$coefficients[1:9])) %>% exp,
low = c(0, as.numeric(confint(mod1_tkm)[-1, 1]),
0, as.numeric(confint(mod2_tkm)[[1]]),
0, as.numeric(confint(mod3_tkm)[2:10, 1]),
0, as.numeric(confint(mod4_tkm)[1:9, 1])) %>% exp,
high = c(0, as.numeric(confint(mod1_tkm)[-1, 2]),
0, as.numeric(confint(mod2_tkm)[[2]]),
0, as.numeric(confint(mod3_tkm)[2:10, 2]),
0, as.numeric(confint(mod4_tkm)[1:9, 2])) %>% exp,
cat = c(rep("1. Normal", 20), rep("2. Age Controlled", 20))
)
ggplot2::ggplot(results_tkm, mapping = ggplot2::aes(x = year, y = value * 100 - 100, colour = model,
# shape = model
)) +
ggplot2::geom_point(position = ggplot2::position_dodge(width = 0.25)) +
ggplot2::geom_line(linetype = 3) +
ggplot2::geom_errorbar(
mapping = ggplot2::aes(ymin = low * 100 - 100, ymax = high * 100 - 100, x = year),
width = 0.2,
position = ggplot2::position_dodge(width = 0.25)
) +
ggplot2::facet_grid(cols = ggplot2::vars(cat)) +
ggplot2::labs(x = "Year", y = "Growth Rate (%) Relative to 2011", colour = "Model") +
ggplot2::theme(legend.position="bottom") +
ggplot2::scale_colour_discrete(labels = c("Year", "Year & Ind.", "Year & Age" , "Year & Age & Ind.")) +
ggplot2::scale_x_continuous(breaks = c(2011, 2014, 2017, 2020))
install.packages("pglm")
selection_model <- pglm::pglm(
lfp ~ year + age + age^2 + female + kids_preschool_d + kids_school_d,
data = tkm,
family = binomial("probit"),
model = "pooling"
)
selection_model <- pglm::pglm(
lfp ~ year + age + age^2 + female + kids_preschool_d + kids_school_d,
data = tkm,
index = c("individual_id", "year"),
family = binomial("probit"),
model = "pooling"
)
selection_model <- pglm::pglm(
lfp ~ year + age + age^2 + female + kids_preschool_d + kids_school_d,
data = tkm,
index = c("atena", "year"),
family = binomial("probit"),
model = "pooling"
)
# Settings
here::i_am("analyze.Rmd")
options(box.path = here::here())
options(tinytex.verbose = TRUE)
box::use(magrittr[`%>%`])
ggplot2::theme_set(ggplot2::theme_gray(base_size = 20))
selection_model <- pglm::pglm(
lfp ~ year + age + age^2 + female + kids_preschool_d + kids_school_d,
data = tkm,
index = c("atena", "year"),
family = binomial("probit"),
model = "pooling"
)
install.packages("maxLik")
selection_model <- pglm::pglm(
lfp ~ year + age + age^2 + female + kids_preschool_d + kids_school_d,
data = tkm,
index = c("atena", "year"),
family = binomial("probit"),
model = "pooling"
)
source("~/R/docker-r-starter/setup.R")
results
setwd("~/R/test")
